package com.coreyd97.antivirus.common.network;

import java.io.IOException;
import java.net.Inet4Address;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.logging.Logger;

public abstract class ServerThread extends Thread {
    private final short port;
    private final Inet4Address listenAddress;
    private ServerSocket socket;
    private ArrayList<NetworkListener> listeners;


    public ServerThread(short port) throws IOException {
        this((Inet4Address) Inet4Address.getByName("0.0.0.0"), port);
    }

    public ServerThread(Inet4Address listenAddress, short port) throws IOException {
        this.port = port;
        this.listenAddress = listenAddress;
        this.socket = new ServerSocket(port, 1024, listenAddress);
        this.listeners = new ArrayList<>();
    }

    @Override
    public void run() {
        try {
            while(true){
                Socket clientSocket = socket.accept();
                Logger.getLogger("NETWORK").info("Connection Received" + clientSocket.getInetAddress());
                ClientConnection client = buildClient(clientSocket);
                client.start();
                for (NetworkListener listener : listeners) {
                    listener.onClientConnect(client);
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
            for (NetworkListener listener : listeners) {
                listener.onNetworkError((ClientConnection.ClientNetworkException) e);
            }
        }
    }

    public abstract ClientConnection buildClient(Socket clientSocket);

    public int getPort() {
        return port;
    }

    public Inet4Address getListenAddress() {
        return listenAddress;
    }

    public ArrayList<NetworkListener> getListeners() {
        return listeners;
    }

    public void addListener(NetworkListener listener){
        this.listeners.add(listener);
    }

    public void removeListener(NetworkListener listener){
        this.listeners.remove(listener);
    }
}
