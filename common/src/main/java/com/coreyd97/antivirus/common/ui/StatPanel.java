package com.coreyd97.antivirus.common.ui;

import com.coreyd97.antivirus.common.stats.StatProvider;
import com.coreyd97.antivirus.common.stats.StatProviderManager;

import javax.swing.*;
import java.awt.*;
import java.util.HashMap;

/**
 * Displays a scrolling panel of all classes which
 * implement StatProvider and updates at an interval.
 */
public class StatPanel extends JScrollPane {
    private final StatProviderManager statProviderManager;
    private final JPanel contentPanel;
    private final HashMap<StatProvider, JPanel> statGroups;
    private final GridBagConstraints gbc;
    private final GridBagConstraints wrapperGbc;

    public StatPanel(StatProviderManager statProviderManager){
        this.statProviderManager = statProviderManager;
        this.contentPanel = new JPanel();
        this.setMaximumSize(this.getSize());
        this.setViewportView(this.contentPanel);
        this.statGroups = new HashMap<>();
        contentPanel.setLayout(new GridBagLayout());
        this.gbc = new GridBagConstraints();
        gbc.fill = GridBagConstraints.BOTH;
        gbc.weightx = 1;
        gbc.weighty = 0;
        gbc.gridx = gbc.gridy = 1;
        this.wrapperGbc = new GridBagConstraints();
        wrapperGbc.fill = GridBagConstraints.BOTH;
        wrapperGbc.weightx = 1;
        wrapperGbc.weighty = 1;
        wrapperGbc.ipady = 7;
        wrapperGbc.gridx = wrapperGbc.gridy = 1;

        GridBagConstraints padGbc = new GridBagConstraints();
        padGbc.fill = GridBagConstraints.BOTH;
        padGbc.weightx = 1;
        padGbc.weighty = 1;
        padGbc.gridx = 1;
        padGbc.gridy = 9999;
        contentPanel.add(new JPanel(), padGbc);

        updatePanel();

        Timer timer = new Timer(500, actionEvent -> {
            updatePanel();
        });
        timer.start();
    }

    public void addStatGroup(StatProvider provider){
        JPanel wrapperPanel = new JPanel(new GridBagLayout());
        JPanel statPanel = provider.getStatPanel();
        wrapperPanel.add(statPanel, wrapperGbc);
        this.statGroups.put(provider, wrapperPanel);
        gbc.gridy++;
        this.contentPanel.add(wrapperPanel, gbc);
    }

    public void removeStatGroup(StatProvider provider){
        JPanel wrapperPanel = this.statGroups.remove(provider);
        if(wrapperPanel == null) return;
        this.contentPanel.remove(wrapperPanel);
        this.revalidate();
        this.repaint();
    }

    public void updateStatPanel(StatProvider provider){
        JPanel wrapperPanel = this.statGroups.get(provider);
        wrapperPanel.removeAll();
        wrapperPanel.add(provider.getStatPanel(), wrapperGbc);
        wrapperPanel.revalidate();
        wrapperPanel.repaint();
    }

    public void updatePanel(){
        for (StatProvider statProvider : statProviderManager.getStatProviders()) {
            if(!statGroups.containsKey(statProvider)){
                addStatGroup(statProvider);
            }else{
                updateStatPanel(statProvider);
            }
        }
    }

}
