package com.coreyd97.antivirus.common.report;

import com.coreyd97.antivirus.common.taskscheduler.TrainTask;

import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

/**
 * Store statistics and information regarding the training of a heuristic engine.
 */
public class TrainReport extends Report {
    public final UUID taskUUID;
    private int trainedSamples, failedSamples, existingSamples;
    private Map<String, Integer> causeOfFailure;

    public TrainReport(TrainTask trainTask){
        this.taskUUID = trainTask.getUUID();
        this.causeOfFailure = new HashMap<>();
    }

    public synchronized void addFailedSample(String cause){
        if(causeOfFailure.containsKey(cause)){
            causeOfFailure.put(cause, causeOfFailure.get(cause)+1);
        }else{
            causeOfFailure.put(cause, 1);
        }
    }

    public synchronized void incrementTrained(){
        this.trainedSamples++;
    }

    public synchronized void incrementFailed(){
        this.failedSamples++;
    }

    public synchronized void incrementExisting(){
        this.existingSamples++;
    }

    public int getTrainedSamples() {
        return trainedSamples;
    }

    public int getFailedSamples() {
        return failedSamples;
    }

    public int getExistingSamples() {
        return existingSamples;
    }

    public Map<String, Integer> getCauseOfFailure() {
        return causeOfFailure;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("Total Trained Samples: " + trainedSamples + "\n");
        sb.append("Failed Samples: " + failedSamples + "\n");
        sb.append("Causes of Failure: \n");
        causeOfFailure.forEach((cause, count) -> {
            sb.append(cause + "-" + count + "\n");
        });
        return sb.toString();
    }
}
