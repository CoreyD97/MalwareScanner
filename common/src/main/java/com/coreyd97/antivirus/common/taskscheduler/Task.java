package com.coreyd97.antivirus.common.taskscheduler;

import java.util.ArrayList;
import java.util.UUID;
import java.util.concurrent.Callable;

public abstract class Task implements Callable {
    //TODO Multithreaded tasks.
    private UUID uuid;
    private String name;
    private ArrayList<TaskListener> taskListeners;
    private java.util.UUID UUID;

    protected Task(String taskName){
        this.uuid = UUID.randomUUID();
        this.name = taskName;
        this.taskListeners = new ArrayList<>();
    }

    public UUID getUUID() { return UUID; }

    protected void setUUID(UUID uuid) { this.uuid = uuid; }

    public String getName() {
        return name;
    }

    public void taskStart(int steps){
        synchronized (this.taskListeners) {
            for (TaskListener taskListener : this.taskListeners) {
                taskListener.onTaskStart(this, steps);
            }
        }
    }

    public void taskAddSteps(int steps){
        synchronized (this.taskListeners) {
            for (TaskListener taskListener : this.taskListeners) {
                taskListener.onTaskStepsAdded(this, steps);
            }
        }
    }

    public void taskProgress(){
        synchronized (this.taskListeners) {
            for (TaskListener taskListener : this.taskListeners) {
                taskListener.onTaskProgress(this);
            }
        }
    }

    public void taskComplete(){
        synchronized (this.taskListeners) {
            for (TaskListener taskListener : this.taskListeners) {
                taskListener.onTaskComplete(this);
            }
            this.taskListeners.clear();
        }
    }

    public void registerTaskListener(TaskListener taskListener){
        this.taskListeners.add(taskListener);
    }

    public void removeTaskListener(TaskListener taskListener){
        this.taskListeners.remove(taskListener);
    }
}

