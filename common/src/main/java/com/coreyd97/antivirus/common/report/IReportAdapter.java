package com.coreyd97.antivirus.common.report;

import com.google.gson.*;

import java.lang.reflect.Type;

/**
 * Custom JSON serialization for reports.
 */
public class IReportAdapter implements JsonSerializer<Report>, JsonDeserializer<Report> {

    @Override
    public JsonElement serialize(Report report, Type type, JsonSerializationContext context) {
        JsonObject object;

        if(report instanceof ScanReport){
            object = (JsonObject) context.serialize(report, ScanReport.class);
            object.addProperty("type", "ScanReport");
        }else if(report instanceof TrainReport){
            object = (JsonObject) context.serialize(report, TrainReport.class);
            object.addProperty("type", "TrainReport");
        }else if(report instanceof ResultsReport){
            object = (JsonObject) context.serialize(report, ResultsReport.class);
            object.addProperty("type", "ResultsReport");
        }else{
            return null;
        }
        return object;
    }

    @Override
    public Report deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
        switch (((JsonObject) json).get("type").getAsString()) {
            case "ScanReport": {
                return context.deserialize(json, ScanReport.class);
            }
            case "TrainReport": {
                return context.deserialize(json, TrainReport.class);
            }
            case "ResultsReport": {
                return context.deserialize(json, ResultsReport.class);
            }
        }
        return null;
    }
}
