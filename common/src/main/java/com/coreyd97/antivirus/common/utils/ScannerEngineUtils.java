package com.coreyd97.antivirus.common.utils;

import com.coreyd97.antivirus.common.report.Report;
import com.coreyd97.antivirus.common.report.TrainReport;
import com.coreyd97.antivirus.common.taskscheduler.FileTask;
import com.github.plusvic.yara.Yara;
import com.github.plusvic.yara.YaraCompilationCallback;
import com.github.plusvic.yara.YaraCompiler;
import com.github.plusvic.yara.YaraException;

import java.io.File;

public class ScannerEngineUtils {

    public static class RuleImportTask extends FileTask {
        Yara yara;
        YaraCompiler compiler;

        public RuleImportTask(File[] files, TrainReport trainReport, Yara yara, YaraCompiler compiler) {
            super("Yara Rule Import", files, trainReport);
            this.yara = yara;
            this.compiler = compiler;
        }

        @Override
        protected void processFile(File file) {
            try {
                compiler.addRulesFile(file.getAbsolutePath(), file.getAbsolutePath(), null);
            }catch (YaraException e){}
        }

        @Override
        public Report call() {
            YaraCompilationCallback compilationCallback = new YaraCompilationCallback() {
                @Override
                public void onError(ErrorLevel errorLevel, String file, long line, String message) {
                    if(errorLevel == ErrorLevel.ERROR) {
                        ((TrainReport) report).addFailedSample(String.format("Yara compilation failed. %s", message), file);
                    }
                }
            };
            compiler.setCallback(compilationCallback);
            Report report = super.call();
            yara.finalizeThread();
            return report;
        }
    }

}
