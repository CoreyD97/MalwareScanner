package com.coreyd97.antivirus.common.taskscheduler;

import com.coreyd97.antivirus.common.network.ServerConnectionHandler;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.logging.Logger;

public abstract class NetworkTask<T> extends Task<T> {

    private final ServerConnectionHandler networkController;
    private Socket socket;
    protected BufferedReader input;
    protected PrintWriter output;

    protected NetworkTask(String taskName, ServerConnectionHandler networkController){
        super(taskName);
        this.networkController = networkController;
    }

    protected abstract T interact() throws IOException;
    protected abstract T onFailure();

    //Setup socket input/output before calling subclass interact method.
    @Override
    public void run() {
        taskStart(1);
        try{
            socket = this.networkController.establishConnection();
            input = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            output = new PrintWriter(socket.getOutputStream(), true);
            this.result = interact();
        }catch (IOException e){
            Logger.getLogger("Network Task").warning(e.getMessage());
            this.result = onFailure();
        }finally {
            taskProgress();
            taskComplete();

            if(socket != null) {
                try {
                    socket.close();
                } catch (IOException ignored) {}
            }
            if(input != null) {
                try {
                    input.close();
                } catch (IOException ignored) {}
            }
            if(output != null) {
                output.close();
            }
        }
        this.completed = true;
        if(this.callback != null)
            this.callback.run();
    }
}
