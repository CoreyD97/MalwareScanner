package com.coreyd97.antivirus.common.report;

import com.coreyd97.antivirus.common.taskscheduler.ScanTask;

import java.net.Inet4Address;
import java.util.ArrayList;
import java.util.UUID;

/**
 * The results of an analysis task or explain task.
 * Contains the results of the files.
 */
public class ResultsReport extends Report {
    private UUID taskUUID;
    final ArrayList<MalwareEntry> foundMalware;
    final ArrayList<Explanation> explanations;
    final ScanTask.ScanType type;

    public ResultsReport(ScanReport scanReport){
        this.foundMalware = new ArrayList<>();
        this.explanations = new ArrayList<>();
        this.setUUID(scanReport.getUUID());
        this.taskUUID = scanReport.getTaskUUID();
        this.type = scanReport.getType();
    }

    public ResultsReport(ScanTask scanTask){
        this.foundMalware = new ArrayList<>();
        this.explanations = new ArrayList<>();
        this.taskUUID = scanTask.getUUID();
        this.type = scanTask.getType();
    }

    public UUID getTaskUUID() {
        return taskUUID;
    }

    public void addMalware(MalwareEntry malwareEntry){
        synchronized (this.foundMalware){
            this.foundMalware.add(malwareEntry);
        }
    }

    public ArrayList<MalwareEntry> getFoundMalware() {
        return foundMalware;
    }

    public void addExplanation(Explanation explanation){
        synchronized (this.explanations){
            this.explanations.add(explanation);
        }
    }

    public ArrayList<Explanation> getExplanations() {
        return explanations;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        for (MalwareEntry malwareEntry : this.foundMalware) {
            sb.append(malwareEntry.toString() + "\n\n");
        }
        for (Explanation explanation : this.explanations) {
            sb.append(explanation.toString() + "\n\n");
        }
        return sb.toString();
    }
}
