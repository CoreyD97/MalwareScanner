package com.coreyd97.antivirus.common.taskscheduler;

import com.coreyd97.antivirus.common.report.*;

import java.sql.SQLException;
import java.util.logging.Logger;

public abstract class AnalysisTask extends Task<ResultsReport> implements ReportPublisher<ResultsReport> {
    protected ScanReport scanReport;
    protected ResultsReport resultsReport;
    private ReportHandler<ResultsReport> reportHandler;

    protected AnalysisTask(String taskName, ScanReport scanReport) {
        super(taskName);
        this.scanReport = scanReport;
        this.resultsReport = new ResultsReport(scanReport);
    }

    public void setReportHandler(ReportHandler<ResultsReport> reportHandler){
        this.reportHandler = reportHandler;
    }

    //Implement in subclasses to define handling of each file.
    protected abstract void processFile(FileFeatures features) throws SQLException;

    private void processReport(){
        if(this.reportHandler != null) {
            this.reportHandler.onReportReady(resultsReport);
        }
    }

    public void run() {
        if(scanReport.getFileFeatures() != null) {
            taskStart(scanReport.getFileFeatures().size());
            scanReport.getFileFeatures().forEach(fileFeatures -> {
                try {
                    processFile(fileFeatures);
                } catch (SQLException e) {
                    Logger.getLogger("Analysis").warning("SQL EXCEPTION - " + e.getSQLState());
                }
                taskProgress();
            });
        }
        taskComplete();
        processReport();
        this.completed = true;
        if(this.callback != null)
            this.callback.run();
    }
}
