package com.coreyd97.antivirus.common.test;

import com.coreyd97.antivirus.common.exception.TreePathException;
import com.coreyd97.antivirus.common.utils.ScanStateTree;
import com.coreyd97.antivirus.common.utils.Utils;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

import java.io.File;

public class ScanStateTreeTest {

    ScanStateTree tree;

    @Before
    public void before(){
        File file = new File("/home/corey/Downloads/test");
        tree = new ScanStateTree(file);
    }

    //TODO proper tests for scanstatetree
    @Test
    public void test() throws TreePathException {

            tree.onFileScanned(new File("/home/corey/Downloads/test/file"));
            tree.directoryEntered("/home/corey/Downloads/test/c/2/a");
            tree.onFileScanned(new File("/home/corey/Downloads/test/c/2/a/1"));
            tree.onFileScanned(new File("/home/corey/Downloads/test/c/2/a/2"));
            tree.onFileScanned(new File("/home/corey/Downloads/test/c/2/a/3"));
            tree.directoryLeft("/home/corey/Downloads/test/c/2/a");
            tree.directoryLeft("/home/corey/Downloads/test/c/2");
            tree.directoryLeft("/home/corey/Downloads/test/c");
            tree.onAnalysisReceived(new File("/home/corey/Downloads/test/c/2/a/1"), Utils.FileStatus.CLEAN);
            tree.onAnalysisReceived(new File("/home/corey/Downloads/test/c/2/a/2"), Utils.FileStatus.MALWARE);
            tree.onAnalysisReceived(new File("/home/corey/Downloads/test/c/2/a/3"), Utils.FileStatus.CLEAN);
            ScanStateTree child = tree.getDescendant(new String[]{"c","2","a"});
    }
}
