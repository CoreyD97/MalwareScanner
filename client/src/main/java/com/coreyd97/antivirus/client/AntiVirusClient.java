package com.coreyd97.antivirus.client;

import com.coreyd97.antivirus.client.engine.ScanManager;
import com.coreyd97.antivirus.client.network.CheckConnectionTask;
import com.coreyd97.antivirus.common.network.ServerConnectionHandler;
import com.coreyd97.antivirus.common.engine.DetectionModule;
import com.coreyd97.antivirus.common.taskscheduler.TaskScheduler;
import com.coreyd97.antivirus.client.ui.AntiVirusUI;
import com.coreyd97.antivirus.common.Options;
import com.coreyd97.antivirus.common.utils.Utils;
import org.reflections.Reflections;

import javax.swing.*;
import java.lang.reflect.Field;
import java.lang.reflect.Modifier;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;

public class AntiVirusClient {
    private AntiVirusUI ui;
    private Options options;
    private Map<String, Class<? extends DetectionModule>> scannerEngines;
    private final TaskScheduler taskScheduler;
    private final ScanManager scanManager;
    private final ServerConnectionHandler analysisConnectionHandler;

    private AntiVirusClient() {
        this.options = new Options();
        String address = this.options.getValue("server.address", String.class, "0.0.0.0");
        InetAddress serveraddress = null;
        try {
            serveraddress = InetAddress.getByName(address);
        } catch (UnknownHostException e) {}
        short serverport = this.options.getValue("server.port", Integer.class, 4397).shortValue();

        //Setup AV Components
        this.taskScheduler = new TaskScheduler(25);
        this.analysisConnectionHandler = new ServerConnectionHandler(serveraddress, serverport);
        this.scanManager = new ScanManager(this.analysisConnectionHandler, this.taskScheduler);
        this.scanManager.start();
    }

    public static void main(String[] args) {
        AntiVirusClient avClient = new AntiVirusClient();

        SwingUtilities.invokeLater(() -> {
//            try {
//                UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
//            } catch (ClassNotFoundException | InstantiationException | UnsupportedLookAndFeelException | IllegalAccessException e) {}
            new AntiVirusUI(avClient);
        });


        CheckConnectionTask task = new CheckConnectionTask(avClient.getAnalysisConnectionHandler());
        avClient.getTaskScheduler().execute(task);
        task.setCallback(() -> {
            if (task.getResult()) {

            } else {
                Utils.showMessage("Network Error", "Could not connect to server. Check the server is running and correctly configured.");
            }
        });
    }

//    public static AntiVirusClient getInstance() {
//        if (instance == null) instance = new AntiVirusClient();
//        return instance;
//    }

    public Options getOptions() {
        return options;
    }

    public void shutdown(){
        System.exit(0);
    }

    public AntiVirusUI getUI() {
        return ui;
    }

    public TaskScheduler getTaskScheduler() {
        return taskScheduler;
    }

    public Map<String, Class<? extends DetectionModule>> getScannerEngines() {
        return scannerEngines;
    }

    public ServerConnectionHandler getAnalysisConnectionHandler() {
        return analysisConnectionHandler;
    }

    public ScanManager getScanManager() {
        return scanManager;
    }
}
